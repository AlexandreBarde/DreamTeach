<?php
/**
 * Created by PhpStorm.
 * User: Adel
 * Date: 04/02/2019
 * Time: 10:21
 */

namespace App\Controller;

use App\Entity\School;
use App\Entity\Student;
use App\Entity\Training;
use App\Form\UploadPicture;
use Doctrine\Common\Persistence\ObjectManager;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\IsGranted;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface;

class ProfileController extends AbstractController
{

    /**
     * @Route("/profile/{idStudent}", name="profileView")
     */
    public function getInfoStudent($idStudent)
    {
        $reqUser = $this->getDoctrine()->getRepository(Student::Class);
        $user = $reqUser->find($idStudent);

        if($idStudent == $this->getUser()->getId()) {
            return $this->redirectToRoute('myProfile');
        }
        return $this->render("viewProfile.html.twig", ["user" => $user, "isCurrentUser" => $this->getUser()->getId() == $user->getId()]);
    }
    /**
     * @Route("/profile", name="myProfile")
     */
    public function getInfoCurrentStudent()
    {
        $reqUser = $this->getDoctrine()->getRepository(Student::Class);
        $user = $reqUser->find($this->getUser()->getId());

        return $this->render("viewProfile.html.twig", ["user" => $user, "isCurrentUser" => $this->getUser()->getId() == $user->getId()]);
    }
    /**
     * @Route("/updateProfile", name="updateProfile")
     */
    public function updateProfile()
    {
        return $this->render("updateProfile.html.twig");
    }

    /**
     * @Route("/deleteProfile", name="deleteProfile")
     * @IsGranted("ROLE_USER")
     */
    public function deleteProfile()
    {
        $repository = $this->getDoctrine()->getRepository(Student::class);
        $user = $repository->find($this->getUser()->getId());

        $entityManager = $this->getDoctrine()->getManager();
        $entityManager->remove($user);
        $entityManager->flush();

        return $this->render("empty.html.twig");
    }

    /**
     * @Route("/accueil/uploadPicture", name="")
     * @param Request $request
     * @return \Symfony\Component\HttpFoundation\RedirectResponse|\Symfony\Component\HttpFoundation\Response
     */
    public function uploadPicture(Request $request)
    {
        $repository = $this->getDoctrine()->getRepository(Student::class);
        /** @var Student $user */
        $student = $repository->find($this->getUser()->getId());

        $form = $this->createForm(UploadPicture::class, $student);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid())
        {

            /** @var UploadedFile $file */
            $file = $student->getAvatar();
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();

            try
            {
                $file->move(
                    $this->getParameter('avatar_directory'),
                    $fileName
                );
            }
            catch (FileException $e)
            {
                // TODO GÃ©rer les erreurs
            }

            $student->setAvatar($fileName);

            $em = $this->getDoctrine()->getManager();
            $em->persist($student);
            $em->flush();

            return $this->redirect($this->generateUrl('HomeController'));

        }

        return $this->render(
            "uploadPicture.html.twig",
            [
                'form' => $form->createView(),
                'user' => $this->getUser(),
            ]
        );
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

}